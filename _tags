# OASIS_START
# DO NOT EDIT (digest: 5e4dba20e4b78112f8b54e3f0d10d001)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library HardCamlRiscV
"src/HardCamlRiscV.cmxs": use_HardCamlRiscV
"src/utils.cmx": for-pack(HardCamlRiscV)
"src/cache.cmx": for-pack(HardCamlRiscV)
"src/pipe.cmx": for-pack(HardCamlRiscV)
"src/picorv32.cmx": for-pack(HardCamlRiscV)
<src/*.ml{,i,y}>: pkg_deriving
<src/*.ml{,i,y}>: pkg_hardcaml
<src/*.ml{,i,y}>: pkg_hardcaml-waveterm.lterm
<src/*.ml{,i,y}>: pkg_hardcaml.syntax
<src/*.ml{,i,y}>: pkg_riscv
# Executable picorv32tb
<test/testbench.{native,byte}>: pkg_deriving
<test/testbench.{native,byte}>: pkg_hardcaml
<test/testbench.{native,byte}>: pkg_hardcaml-llvmsim
<test/testbench.{native,byte}>: pkg_hardcaml-waveterm.lterm
<test/testbench.{native,byte}>: pkg_hardcaml.syntax
<test/testbench.{native,byte}>: pkg_riscv
<test/testbench.{native,byte}>: use_HardCamlRiscV
<test/testbench.{native,byte}>: custom
# Executable rv32tb
"test/testbench_rv32.byte": pkg_deriving
"test/testbench_rv32.byte": pkg_hardcaml
"test/testbench_rv32.byte": pkg_hardcaml-llvmsim
"test/testbench_rv32.byte": pkg_hardcaml-waveterm.lterm
"test/testbench_rv32.byte": pkg_hardcaml.syntax
"test/testbench_rv32.byte": pkg_riscv
"test/testbench_rv32.byte": use_HardCamlRiscV
<test/*.ml{,i,y}>: pkg_hardcaml-llvmsim
"test/testbench_rv32.byte": custom
# Executable genpicorv32
<test/genpicorv32.{native,byte}>: pkg_deriving
<test/genpicorv32.{native,byte}>: pkg_hardcaml
<test/genpicorv32.{native,byte}>: pkg_hardcaml-waveterm.lterm
<test/genpicorv32.{native,byte}>: pkg_hardcaml.syntax
<test/genpicorv32.{native,byte}>: pkg_riscv
<test/genpicorv32.{native,byte}>: use_HardCamlRiscV
<test/*.ml{,i,y}>: pkg_deriving
<test/*.ml{,i,y}>: pkg_hardcaml
<test/*.ml{,i,y}>: pkg_hardcaml-waveterm.lterm
<test/*.ml{,i,y}>: pkg_hardcaml.syntax
<test/*.ml{,i,y}>: pkg_riscv
<test/*.ml{,i,y}>: use_HardCamlRiscV
<test/genpicorv32.{native,byte}>: custom
# OASIS_STOP
true: debug
